(set-logic QF_NIA)
(declare-fun M_0 () Int)
(assert (>= M_0 0))
(declare-fun M_1 () Int)
(assert (>= M_1 0))
(declare-fun M_2 () Int)
(assert (>= M_2 0))
(assert (or (> M_0 0) (> M_1 0) (> M_2 0)))
(declare-fun N00 () Int)
(assert (>= N00 0))
(declare-fun N01 () Int)
(assert (>= N01 0))
(declare-fun N02 () Int)
(assert (>= N02 0))
(declare-fun Nstart0 () Int)
(assert (or (= Nstart0 0) (= Nstart0 1)))
(declare-fun N0last () Int)
(assert (or (= N0last 0) (= N0last 1)))
(declare-fun N10 () Int)
(assert (>= N10 0))
(declare-fun N11 () Int)
(assert (>= N11 0))
(declare-fun N12 () Int)
(assert (>= N12 0))
(declare-fun Nstart1 () Int)
(assert (or (= Nstart1 0) (= Nstart1 1)))
(declare-fun N1last () Int)
(assert (or (= N1last 0) (= N1last 1)))
(declare-fun N20 () Int)
(assert (>= N20 0))
(declare-fun N21 () Int)
(assert (>= N21 0))
(declare-fun N22 () Int)
(assert (>= N22 0))
(declare-fun Nstart2 () Int)
(assert (or (= Nstart2 0) (= Nstart2 1)))
(declare-fun N2last () Int)
(assert (or (= N2last 0) (= N2last 1)))

(assert (= (+ (* 1 M_0) (* 1 M_1) (* 1 M_2)) (+ (* 2 M_0) (* 0 M_1) (* 1 M_2))))
(assert (= (+ (* 0 M_0) (* 1 M_1) (* 1 M_2)) (+ (* 1 M_0) (* 1 M_1) (* 0 M_2))))
(assert (= (+ Nstart0 N00 N10 N20) M_0))
(assert (= (+ N0last N00 N01 N02) M_0))
(assert (<= N00 (- M_0 1)))
(assert (= (+ Nstart1 N01 N11 N21) M_1))
(assert (= (+ N1last N10 N11 N12) M_1))
(assert (<= N11 (- M_1 1)))
(assert (= (+ Nstart2 N02 N12 N22) M_2))
(assert (= (+ N2last N20 N21 N22) M_2))
(assert (<= N22 (- M_2 1)))
(assert (= (+ Nstart0 Nstart1 Nstart2) 1))
(assert (= (+ N0last N1last N2last) 1))
(assert (= (+ 0 (* 1 N21)) (+ 0 (* 1 N02) (* 1 N0last) (* 1 N22))))
(assert (= (+ 0 (* 1 N10) (* 1 N11) (* 1 N12) (* 1 N1last) (* 1 N22)) (+ 0 (* 1 N00) (* 1 N01) (* 1 N0last) (* 1 N21))))
(assert (= (+ 0 (* 1 N11) (* 1 N20) (* 1 N21) (* 1 N22) (* 1 N2last)) (+ 0 (* 1 N00) (* 1 N02) (* 1 N12))))
(assert (= (+ 0 (* 1 N12)) (+ 0 (* 1 N01) (* 1 N11))))

(check-sat)
(get-model)
(exit)